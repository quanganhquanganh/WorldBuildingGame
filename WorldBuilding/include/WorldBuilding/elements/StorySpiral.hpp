#ifndef STORYSPIRAL_HPP
#define STORYSPIRAL_HPP

#include <string>
#include <vector>
#include "../cards/Story.hpp"

namespace WorldGame {
  /**
   * @brief StorySpiral class
   * This class comprises of many circles each encompassing another (the spiral).
   * The spiral is a story that is generated by the player.
   * Each circle is filled with many stories for reuse in the later circles.
   * The default number of circles is 6 (First act = 2, Second act = 3, Third act = 1).
   */
  class StorySpiral {
  /* 
    Story - Spiral Location pair
    The location is n * x (x from 0 to 360)
    The story is the story at the location.
  */
  struct StoryLoc {
    Story story;
    int location;
  };
  public:
    /**
     * @brief StorySpiral constructor
     *
     * @param num_circles
     * The number of circles in the spiral.
     */
    StorySpiral(int num_circles = 6);
    ~StorySpiral() = default;

    /**
     * @brief get_previous_stories
     * Returns the stories in the previous circles.
     * @return
     * The stories in the previous circles.
     */
    std::vector<StoryLoc&> get_previous_stories(int from, int to);

    /**
     * @brief put_story
     * Adds a story to the spiral.
     * @param story
     * The story to add.
     * @param location
     * The location of the story.
     */
    void put_story(Story story, int location);

  private:
    /**
     * @brief _num_circles
     * The number of circles in the spiral.
     */
    int _num_circles;
    /**
     * @brief _stories
     * The stories in the spiral.
     */
    std::vector<StoryLoc> _stories;
  };
}

#endif // STORYSPIRAL_HPP